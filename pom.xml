<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>gr.manousos</groupId>
    <artifactId>config-server</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>config-server</name>
    <description>Demo project for Spring Boot</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.2.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <spring-cloud.version>Finchley.BUILD-SNAPSHOT</spring-cloud.version>
        <!--<start-class>com.packtpub.mmj.user.UsersApp</start-class>-->
        <!--<maven.compiler.source>1.8</maven.compiler.source>-->
        <!--<maven.compiler.target>1.8</maven.compiler.target>-->
        <!-- For Docker hub leave empty; use "localhost:5000/" for a local Docker Registry -->
        <!--<docker.registry.name>localhost:5000/</docker.registry.name>-->
        <!--<docker.repository.name>${docker.registry.name}manousos/${project.artifactId}</docker.repository.name>-->
        <docker.host.address>localhost</docker.host.address>
        <docker.port>8080</docker.port>
    </properties>

    <profiles>
        <profile>
            <id>docker</id>
            <properties>
                <spring.profiles.active>docker</spring.profiles.active>
            </properties>
        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-config-server</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jolokia</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.13.7</version>
                <configuration>
                    <images>
                        <image>
                            <name>${project.artifactId}:${project.version}</name>
                            <alias>${project.artifactId}</alias>
                            <build>
                                <from>java:8-jre</from>
                                <maintainer>manousos</maintainer>
                                <tags>
                                    <tag>latest</tag>
                                    <tag>${project.version}</tag>
                                </tags>
                                <assembly>
                                    <descriptor>docker-assembly.xml</descriptor>
                                </assembly>
                                <ports>
                                    <port>8080</port>
                                </ports>
                                <cmd>
                                    <shell>java -jar \
                                        /maven/${project.build.finalName}.jar server \
                                        /maven/docker-config.yml
                                    </shell>
                                </cmd>
                            </build>
                            <run>
                                <namingStrategy>alias</namingStrategy>
                                <ports>
                                    <port>${docker.port}:8080</port>
                                </ports>
                                <volumes>
                                    <bind>
                                        <volume>${user.home}/logs:/logs</volume>
                                    </bind>
                                </volumes>
                                <!-- The Docker Maven plugin can detect if the container has finished starting up by polling the ping URL of the admin backend until it receives an answer. -->
                                <!--<wait>-->
                                <!--<url>http://${docker.host.address}:${docker.port}/v1/user/1</url>-->
                                <!--<time>100000</time>-->
                                <!--</wait>-->
                                <log>
                                    <prefix>${project.artifactId}</prefix>
                                    <color>cyan</color>
                                </log>
                            </run>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <repositories>
        <repository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>


</project>
